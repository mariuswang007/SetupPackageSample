; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
; import download package
#include <idp.iss>

#define MyAppName "uuabc"
#define MyAppVersion "1.5"
#define MyAppPublisher "uuabc, Inc."
#define MyAppURL "https://www.uuabc.com/"
#define MyAppExeName "MyProg.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5F115DC6-31DF-4CC0-8C21-641DD36131E4}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=no
InfoBeforeFile=C:\Users\Marius\Documents\uuabc Installer\BeforeInstallation.txt
;InfoAfterFile=C:\Users\Marius\Documents\uuabc Installer\AfterInstallation.txt
OutputBaseFilename=uuabc_setup
SetupIconFile= C:\code\SetupPackageSample\forWindos\luncher.ico
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "chinese"; MessagesFile: "compiler:Languages\Chinese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: checkedonce

[Files]
Source: "C:\code\SetupPackageSample\forWindos\luncher.ico"; DestDir: "{app}"; Flags: ignoreversion;

[Code]
const
  ChromeAppRegKey = 'Software\Microsoft\Windows\CurrentVersion\App Paths\chrome.exe';

function IsChromeInstalled: Boolean;
begin
  { check if there's the Chrome app registration entry under the HKCU, or }
  { HKLM root key, return the result }
  Result := RegKeyExists(HKEY_CURRENT_USER, ChromeAppRegKey) or
    RegKeyExists(HKEY_LOCAL_MACHINE, ChromeAppRegKey);
end;

function GetChromeFileName(Value: string): string;
var
  S: string;
begin
  { initialize returned value to an empty string }
  Result := '';
  { first attempt to read the Chrome app file name from the HKCU root key; }
  { if that fails, try to read the same from HKLM; if any of that succeed, }
  { return the obtained registry value }
  if RegQueryStringValue(HKEY_CURRENT_USER, ChromeAppRegKey, '', S) or
    RegQueryStringValue(HKEY_LOCAL_MACHINE, ChromeAppRegKey, '', S)
  then
    Result := S;
end;

procedure InitializeWizard();
begin
  if GetChromeFileName('') = '' then
  begin
    if IsWin64 then
    begin
      //add link for downloads
      idpAddFile('http://127.0.0.1:8000/dl/68.0.3440.106_chrome_installer.exe', ExpandConstant('{tmp}\chrome.exe'));  
    end
    else
    begin
      //32 bit version
      //idpAddFile('http://127.0.0.1:8000/dl/68.0.3440.106_chrome_installer.exe', ExpandConstant('{tmp}\chrome.exe'));  
    end

    //download
    idpDownloadAfter(wpReady);
  end  
end;

[Icons]
Name: "{commondesktop}\{#MyAppName}"; Filename: "{code:GetChromeFileName}"; Parameters:"uuabc.com"; Tasks: desktopicon; IconFilename: "{app}\luncher.ico"; Flags : useapppaths; 

[Run]
Filename: "{tmp}\chrome.exe"; Check: not IsChromeInstalled; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: skipifdoesntexist; 
Filename: "{code:GetChromeFileName}"; Parameters: "uuabc.com"; Check: IsChromeInstalled; Flags: waituntilterminated;  

